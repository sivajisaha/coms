# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:alpine

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - dockerBuild
#  - sonarqube
  - deploy
  - helm


build:
  stage: build
  script: gradle clean build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - coms-ui/build/libs/coms-ui-0.0.1-SNAPSHOT.jar
      - coms-customer-api/build/libs/coms-customer-api-0.0.1-SNAPSHOT.jar
  only:
    refs:
      - main
    variables:
      - $TF_VAR_task == "ci" || $TF_VAR_task == "all"

test:
  stage: test
  script: gradle test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  only:
    refs:
      - main
    variables:
      - $TF_VAR_task == "ci" || $TF_VAR_task == "all"  

dockerBuild:
  stage: dockerBuild
  image: docker:20
  services:
    - docker:dind  
  before_script:
    - docker login registry.gitlab.com -u jucoms -p jucoms@1234
  script: 
    - chmod +x ./buildDocker.sh
    - ./buildDocker.sh
  only:
    refs:
      - main
    variables:
      - $TF_VAR_task == "ci" || $TF_VAR_task == "all"

deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script:
    - docker login registry.gitlab.com -u jucoms -p jucoms@1234
  script:
    - kubectl config use-context jucoms/coms:coms-k8s
    - kubectl get pods
    - kubectl apply -f deploy/postgres-deployment.yaml
    - kubectl apply -f deploy/coms-customer-api.yaml
    - kubectl apply -f deploy/coms-ui.yaml
  only:
    refs:
      - main
    variables:
      - $TF_VAR_task == "cd" || $TF_VAR_task == "all"

helm:
  stage: helm
  image: alpine/helm:3.2.1
  script:
#    - helm install COMS ./helm/charts --values=./helm/charts/values.yaml
    - helm --help
  only:
    refs:
      - main
    variables:
      - $TF_VAR_task == "helm"
 
